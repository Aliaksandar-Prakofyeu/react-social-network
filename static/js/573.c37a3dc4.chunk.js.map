{"version":3,"file":"static/js/573.c37a3dc4.chunk.js","mappings":"6KACA,MAA0B,yBAA1B,EAAkE,8BAAlE,EAA6K,0BAA7K,EAAiN,yBCAjN,EAAuB,yBAAvB,EAAyD,2B,mBCgBzD,EAbmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,gBAAKC,UAAWC,EAAhB,UACI,UAAC,KAAD,CAASC,GAAIJ,EAAME,UAAWC,EAA9B,WAAsC,gBAClCE,IAAK,0EACLC,IAAK,eAAgBP,EAAMQ,WCF3C,G,QALgB,SAACR,GACb,OAAO,gBAAKG,UAAWC,EAAhB,SAA4BJ,EAAMS,Y,uCCIvCC,GAAeC,EAAAA,EAAAA,GAAiB,KAWhCC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,cAAjBD,EATL,SAACb,GACpB,OAAO,kBAAMe,SAAUf,EAAMgB,aAAtB,WACH,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAa,qBAAsBV,KAAM,iBAAkBW,UAAW,WAAYC,UAAWC,EAAAA,EAAaC,SAAU,CAACC,EAAAA,EAAUb,QAE1I,mDA+BR,EAzBgB,SAACV,GAEb,IAAIwB,EAAkBxB,EAAMyB,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAiBN,GAAIyB,EAAEzB,IAAZyB,EAAEzB,OAE1E0B,EAAmB5B,EAAM6B,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE5B,OAOnF,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKoB,KAEL,iBAAKrB,UAAWC,EAAhB,WACI,yBAAMwB,KACN,SAAChB,EAAD,CAAqBG,SAZX,SAACgB,GACnB/B,EAAMgC,WAAWD,EAAeE,gBAChCF,EAAeE,eAAgB,a,8BCPvC,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAACC,GACnB,MAAO,CACHX,QAASW,EAAMC,YAAYZ,QAC3BI,SAAUO,EAAMC,YAAYR,SAC5BI,eAAgBG,EAAMC,YAAYJ,mBAIjB,SAACK,GACtB,MAAO,CACHN,WAAY,SAACC,GAAD,OAAqBK,GAASC,EAAAA,EAAAA,GAAwBN,SAOtEO,EAAAA,EAFJ,CAGCC,I,iJCrBGC,EAA6B,SAACN,GAAD,MAAY,CACzCO,OAAQP,EAAMQ,KAAKD,SAGVH,EAAmB,SAACK,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAK/C,MAAM2C,QACT,SAACE,GAAD,UAAeE,KAAK/C,SADI,SAAC,KAAD,CAAUK,GAAE,eAHR,GACX2C,EAAAA,WAShC,OAFqCb,EAAAA,EAAAA,IAAQO,EAARP,CAAoCW","sources":["webpack://react-social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-social-network/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__CYsro\",\"dialogsItems\":\"Dialogs_dialogsItems__NqZcP\",\"active\":\"Dialogs_active__AUXcm\",\"dialog\":\"Dialogs_dialog__NT0ml\",\"messages\":\"Dialogs_messages__jdlA6\",\"message\":\"Dialogs_message__1NMZv\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"DialogItem_name__tN8Im\",\"dialog\":\"DialogItem_dialog__2u+Ru\"};","import s from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} className={s.name}><img\r\n                src={'https://freepikpsd.com/file/2019/10/avatar-png-2-Transparent-Images.png'}\r\n                alt={\"profilePic\"}/>{props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default DialogItem;","import s from \"./../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\n\r\nexport default Message;","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {FormControl} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength140 = maxLengthCreator(140)\r\n\r\nconst NewMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'Enter your message'} name={'newMessageText'} fieldType={'textarea'} component={FormControl} validate={[required, maxLength140]}/>\r\n        </div>\r\n        <button>Send message</button>\r\n    </form>\r\n}\r\n\r\nconst NewMessageReduxForm = reduxForm({form: 'newMessage'})(NewMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n\r\n    let messagesElements = props.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    const addNewMessage = (newMessageData) => {\r\n        props.addMessage(newMessageData.newMessageText)\r\n        newMessageData.newMessageText= ''\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <NewMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => (dispatch(addMessageActionCreator(newMessageText))),\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n(Dialogs);","import React from \"react\";\r\nimport {Navigate} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={`/login`}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["props","path","id","className","s","to","src","alt","name","message","maxLength140","maxLengthCreator","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","fieldType","component","FormControl","validate","required","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageData","addMessage","newMessageText","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}