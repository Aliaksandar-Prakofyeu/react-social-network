{"version":3,"file":"static/js/616.d567d827.chunk.js","mappings":"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","sources":["components/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {Pagination} from \"@mui/material\";\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    const handleChange = (e, p) => {\r\n        onPageChanged(p)\r\n    }\r\n\r\n    return (\r\n        <Pagination count={pagesCount} onChange={handleChange} showFirstButton showLastButton/>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport userPhoto from \"../../assets/images/avatarPlaceholder.png\";\r\nimport {Avatar, Button, IconButton, Stack, Typography} from \"@mui/material\";\r\n\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <Stack direction={\"row\"} spacing={2} sx={{border:\"solid 1px grey\",borderRadius: \"5px\" , padding: \"10px\", margin:\"10px\"}}>\r\n\r\n            <IconButton href={'/react-social-network/profile/' + user.id}>\r\n                <Avatar sx={{width: \"100px\", height: \"100px\"}} src={user.photos.small != null ? user.photos.small : userPhoto}/>\r\n            </IconButton>\r\n\r\n            <Stack direction={\"column\"} spacing={1}>\r\n                <Typography>{user.name}</Typography>\r\n                <Typography>{user.status}</Typography>\r\n                {user.followed\r\n                    ? <Button variant={\"contained\"} disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        unfollow(user.id)\r\n                    }}>Unfollow</Button>\r\n                    : <Button variant={\"contained\"} disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        follow(user.id)\r\n                    }}>Follow</Button>}\r\n            </Stack>\r\n\r\n        </Stack>)\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nconst Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, ...props}) => {\r\n    return <div>\r\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}/>\r\n        <div>{\r\n            props.users.map(u => <User user={u}\r\n                                       followingInProgress={props.followingInProgress}\r\n                                       follow={props.follow}\r\n                                       unfollow={props.unfollow} key={u.id}/>\r\n            )\r\n        }</div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    acceptFollow,\r\n    acceptUnfollow,\r\n    follow,\r\n    getUsersData,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress,\r\n    unfollow\r\n} from \"../../redux/usersReducer\";\r\nimport React from \"react\";\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers,\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsersData(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (p) => {\r\n        const {pageSize} = this.props;\r\n        this.props.setCurrentPage(p)\r\n        this.props.getUsersData(p, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                pageSize={this.props.pageSize}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                onPageChanged={this.onPageChanged}\r\n                currentPage={this.props.currentPage}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    acceptFollow, acceptUnfollow, setCurrentPage, toggleFollowingInProgress,  getUsersData, follow, unfollow\r\n}),\r\n    /*withAuthRedirect*/)\r\n(UsersContainer)"],"names":["totalItemsCount","pageSize","onPageChanged","pagesCount","Math","ceil","Pagination","count","onChange","e","p","showFirstButton","showLastButton","user","followingInProgress","unfollow","follow","Stack","direction","spacing","sx","border","borderRadius","padding","margin","IconButton","href","id","Avatar","width","height","src","photos","small","userPhoto","Typography","name","status","followed","Button","variant","disabled","some","onClick","totalUsersCount","currentPage","props","users","map","u","getUsers","createSelector","state","usersPage","filter","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","setCurrentPage","getUsersData","this","Preloader","React","compose","connect","acceptFollow","acceptUnfollow","toggleFollowingInProgress"],"sourceRoot":""}