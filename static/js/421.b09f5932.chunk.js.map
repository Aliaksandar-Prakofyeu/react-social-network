{"version":3,"file":"static/js/421.b09f5932.chunk.js","mappings":"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","sources":["components/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/usersSelectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["import React from 'react'\r\nimport {Pagination} from '@mui/material'\r\n\r\ntype PropsType ={\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    onPageChanged: (p: number) => void\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    const handleChange= (event:  React.ChangeEvent<unknown> ,page: number) => {\r\n        onPageChanged(page)\r\n    }\r\n\r\n    return (\r\n        <Pagination count={pagesCount}  onChange={handleChange} showFirstButton showLastButton/>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator","import React from 'react'\r\n// @ts-ignore\r\nimport userPhoto from '../../assets/images/avatarPlaceholder.png'\r\nimport {Avatar, Button, IconButton, Stack, Typography} from '@mui/material'\r\nimport {UserType} from '../../Types/types'\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst User:  React.FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <Stack direction={'row'} spacing={2} sx={{border:'solid 1px grey',borderRadius: '5px' , padding: '10px', margin:'10px'}}>\r\n\r\n            <IconButton href={'/react-social-network/profile/' + user.id}>\r\n                <Avatar sx={{width: '100px', height: '100px'}} src={user.photos.small != null ? user.photos.small : userPhoto}/>\r\n            </IconButton>\r\n\r\n            <Stack direction={'column'} spacing={1}>\r\n                <Typography>{user.name}</Typography>\r\n                <Typography>{user.status}</Typography>\r\n                {user.followed\r\n                    ? <Button variant={'contained'} disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        unfollow(user.id)\r\n                    }}>Unfollow</Button>\r\n                    : <Button variant={'contained'} disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        follow(user.id)\r\n                    }}>Follow</Button>}\r\n            </Stack>\r\n\r\n        </Stack>)\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport Paginator from '../Paginator/Paginator'\r\nimport User from './User'\r\nimport {UserType} from '../../Types/types'\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    onPageChanged: (p: number) => void\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n}\r\n\r\nconst Users: React.FC<PropsType> = ({totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize}\r\n                   onPageChanged={onPageChanged}/>\r\n        <div>{\r\n            users.map(u => <User user={u}\r\n                                       followingInProgress={props.followingInProgress}\r\n                                       follow={props.follow}\r\n                                       unfollow={props.unfollow} key={u.id}/>\r\n            )\r\n        }</div>\r\n    </div>\r\n}\r\n\r\nexport default Users","import {createSelector} from 'reselect'\r\nimport {AppStateType} from './reduxStore'\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from 'react-redux'\r\nimport {follow, getUsersData, unfollow} from '../../redux/usersReducer'\r\nimport React from 'react'\r\nimport Users from './Users'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport {compose} from 'redux'\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from '../../redux/usersSelectors'\r\nimport {UserType} from '../../Types/types'\r\nimport {AppStateType} from '../../redux/reduxStore'\r\n\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: any\r\n    pageSize: number\r\n    isFetching: boolean\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsersData: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\ntype PropsType =  MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsersData(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (currentPage: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsersData(currentPage, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                pageSize={this.props.pageSize}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                onPageChanged={this.onPageChanged}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {getUsersData, follow, unfollow\r\n}))(UsersContainer)"],"names":["totalItemsCount","pageSize","onPageChanged","pagesCount","Math","ceil","Pagination","count","onChange","event","page","showFirstButton","showLastButton","user","followingInProgress","unfollow","follow","Stack","direction","spacing","sx","border","borderRadius","padding","margin","IconButton","href","id","Avatar","width","height","src","photos","small","userPhoto","Typography","name","status","followed","Button","variant","disabled","some","onClick","totalUsersCount","users","props","map","u","getUsers","createSelector","state","usersPage","filter","getPageSize","getTotalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","getUsersData","this","Preloader","React","compose","connect"],"sourceRoot":""}