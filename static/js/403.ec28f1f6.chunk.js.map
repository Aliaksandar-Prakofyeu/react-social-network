{"version":3,"file":"static/js/403.ec28f1f6.chunk.js","mappings":"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","sources":["webpack://react-social-network/./src/components/Profile/Profile.module.css?b512","webpack://react-social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Profile_item__QTNb2\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__rR-Br\",\"profileImage\":\"ProfileInfo_profileImage__O6NDb\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n            setEditMode(true)\r\n    }\r\n\r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '---'}</span>\r\n                </div>\r\n            }\r\n            {editMode  &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/avatarPlaceholder.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.profileImage}\r\n                     src={profile.photos.large != null ? profile.photos.large : userPhoto}/>\r\n                <div>{profile.fullName}</div>\r\n                <div>{profile.aboutMe}</div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__bws95\",\"posts\":\"MyPosts_posts__xkQCF\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__C456R\"};","import s from './Post.module.css';\r\nimport userPhoto from \"../../../../assets/images/avatarPlaceholder.png\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={userPhoto} alt={\"profilePic\"}/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span> {props.likeCount}\r\n            </div>\r\n\r\n            <div>\r\n                <span>Dislike</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport React, {memo} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {FormControl} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst NewPostForm = (props) => {\r\n   return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'Type your post here'} name={'newPostText'} component={FormControl} fieldType={'textarea'} validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add New</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({form: 'newPost'})(NewPostForm)\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    console.log('Render')\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} key={p.id}/> );\r\n\r\n    const addNewPost = (newPostData) => {\r\n        props.addPost(newPostData.newPostText);\r\n        newPostData.newPostText = ''\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <NewPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => (dispatch(addPostActionCreator(newPostText))),\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <main className={s.item}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer  />\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\nimport {useNavigate} from 'react-router';\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.signedUserId;\r\n        }\r\n\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    signedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter,withAuthRedirect)\r\n(ProfileContainer)\r\n","import React from \"react\";\r\nimport {Navigate} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={`/login`}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","profile","className","s","src","photos","large","userPhoto","fullName","aboutMe","Preloader","alt","message","likeCount","maxLength10","maxLengthCreator","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","FormControl","fieldType","validate","required","console","log","postsElements","posts","map","p","id","newPostData","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","router","params","signedUserId","getProfile","getStatus","React","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}